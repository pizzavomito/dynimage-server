

<script src="//cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/ace.js" type="text/javascript" charset="utf-8" ></script>

<script>
    var editor = ace.edit("editor");
    var btnDeploy = $("#btn_deploy");
    var btnNew = $("#btn_new");
    var btnTest = $("#btn_test");

    var divNotify = $('#notify');
    var divDeployed = $("#deployed");
    var divTest = $("#test");
    var divLock = $("#lock");

    $('[data-toggle="popover"]').popover({
    trigger: 'hover',
        'placement': 'top'
    });


    btnDeploy.click(function() {
        deploy();
    });
    btnNew.click(function() {
        newInsert();
    });
    btnTest.click(function() {
        compileTest();
    });

    notify = function(msg) {
        d = new Date();
        //divNotify.html(msg);
        divNotify.val( "["+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()+"] "+msg+"\n"+divNotify.val());

        //divNotify.removeClass().addClass("label label-default");
    };
    error = function(msg) {
        notify(msg);
        //divNotify.removeClass().addClass("label label-danger");
    };
    success = function(msg) {
        notify(msg);
        //divNotify.removeClass().addClass("label label-success");
    };
    displayLoaded = function() {

        $("#loaded").load("{{ url_display_loaded }}",
                function(responseText, textStatus, req) {
                    console.log(textStatus);
                    if (textStatus != "success") {

                        change(divDeployed,"danger");
                        disabled(btnDeploy);

                    }
                    else {
                        
                        change(divTest,"success");
                        {% if writable %}
                        enabled(btnDeploy);
                        {% endif %}
                            
                    }
                });
    };
    disabled = function(elt) {
        elt.attr("disabled", "disabled");
    };
    enabled = function(elt) {
        elt.removeAttr("disabled");
    };
    change = function(elt,name) {
        elt.removeClass().addClass("label label-"+name);
    };
    compileTest = function() {
        var contents = editor.getSession().getValue();
        notify("{{ 'Compilation is in progress'|trans }}");
        change(divTest,"warning");
        disabled(btnDeploy);
        disabled(btnTest);
        $.ajax({
            url: "{{ url_test }}",
            type: "POST",
            data: {contents: contents},
            success: function(data, textStatus, jqXHR)
            {
                enabled(btnTest);
                enabled(btnDeploy);
                displayLoaded();
                
                if (data != '')
                success(data);
                
                
                reloadPreview();
                  
            },
            error: function(jqXHR, textStatus, errorThrown)
            {

                change(divTest,"danger");
                error(jqXHR.responseText);
                enabled(btnTest);
                disabled(btnDeploy);
            }
        });
    };

    deploy = function() {
        var contents = editor.getSession().getValue();
        notify("{{ 'Deploy is in progress'|trans }}");

        change(divDeployed,"warning");
        disabled(btnDeploy);
        $.ajax({
            url: "{{ url_deploy }}",
            type: "POST",
            data: {contents: contents},
            success: function(data, textStatus, jqXHR)
            {
                success("{{ 'Deployed successfully'|trans }}");
                change(divDeployed,"success");
                displayLoaded();
                loadPackagesMenu();
              
                reloadPreview();
            },
            error: function(jqXHR, textStatus, errorThrown)
            {
                error(jqXHR.responseText);
                change(divTest,"danger");
                change(divDeployed,"danger");
                disabled(btnDeploy);
            }
        });
    };



    editor.setTheme("ace/theme/idle_fingers");
    editor.getSession().setMode("ace/mode/xml");
    editor.getSession().setUseWrapMode(true);
    //editor.getSession().setTabSize(4);
    editor.getSession().setUseSoftTabs(true);
    editor.commands.addCommand({
        name: 'compileTest',
        bindKey: {win: 'Ctrl-S', mac: 'Command-S', sender: 'editor|cli'},
        exec: function() {

            compileTest();
        }
    });
    editor.getSession().on('change', function(e) {
        change(divDeployed,"danger");
        disabled(btnDeploy);
    });

    disabled(btnDeploy);
     {% if not writable %}
    disabled(btnTest);
    disabled(btnNew);
    editor.setReadOnly(true);
    {% endif %}
    change(divDeployed,"success");
    change(divTest,"success");
    displayLoaded();

</script>
